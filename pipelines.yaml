```yaml
# tech_stack_detector.py
# Pipeline definition for a Java (Maven) project.
# This pipeline automates building, testing, and deploying a Java application.

stages:
  - name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetches all history for better tag/release detection
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17' # or your specific Java version
          distribution: 'temurin' # or another distribution like 'adopt' or 'oracle'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn clean install -DskipTests # Build the project, skipping tests initially

  - name: Test
    needs: Build
    steps:
      - name: Run Tests
        run: mvn test # Run the tests

  - name: SonarQube Analysis
    needs: Test
    if: github.event_name == 'push' # Only run on push events
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Ensure you have this secret defined
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} # Ensure you have this secret defined
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17' # Match the Java version used for building
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: SonarQube Scan
        run: mvn sonar:sonar -Dsonar.projectKey=${{ github.repository }} -Dsonar.organization=your-sonarcloud-org # Replace with your SonarCloud organization

  - name: Package
    needs: SonarQube Analysis
    steps:
      - name: Package application
        run: mvn package # Package the application (e.g., create a JAR or WAR file)

  - name: Deploy
    needs: Package
    if: github.ref == 'refs/heads/main' # Only deploy from the main branch
    steps:
      - name: Deploy to Production
        # Replace with your deployment steps (e.g., deploy to a cloud provider)
        run: echo "Deploying to production..."
```