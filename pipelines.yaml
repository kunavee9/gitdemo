```yaml
# tech_stack_detector.py
name: Node.js CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Or specify a version range
      - name: Install dependencies
        run: npm install
      - name: Run ESLint
        run: npm run lint # Assuming you have a lint script

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run test # Assuming you have a test script

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Build project
        run: npm run build # Assuming you have a build script
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: dist # Or whatever your build output folder is.
          retention-days: 5

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production # Or staging, etc.
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: dist
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your AWS region
      - name: Deploy to S3
        run: |
          aws s3 sync dist s3://your-s3-bucket/ # Replace with your S3 bucket
          aws cloudfront create-invalidation --distribution-id YOUR_CLOUDFRONT_DISTRIBUTION_ID --invalidation-batch file://invalidation.json #Optional: invalidate cache
      - name: Create invalidation.json #Optional: invalidate cache
        if: always()
        run: |
          echo '
          {
            "Paths": {
              "Quantity": 1,
              "Items": ["/*"]
            },
            "CallerReference": "$(date +%s)"
          }
          ' > invalidation.json
```