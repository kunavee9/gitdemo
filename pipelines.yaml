```yaml
# tech_stack_detector.py
name: React CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use a supported Node.js version

      - name: Install Dependencies
        run: npm install # Or yarn install, pnpm install

      - name: Run ESLint
        run: npm run lint # Or yarn lint, pnpm lint

      - name: Run Prettier
        run: npm run format:check # Or yarn format:check, pnpm format:check

      - name: Run Tests
        run: npm run test # Or yarn test, pnpm test

      - name: Build Project
        run: npm run build # Or yarn build, pnpm build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Only deploy from main branch

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to S3 Bucket
        run: |
          aws s3 sync build s3://${{ secrets.AWS_S3_BUCKET }} --delete

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
```