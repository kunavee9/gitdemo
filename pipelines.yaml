```yaml
# tech_stack_detector.py
# Pipeline configuration for Java (Maven) project.

stages:
  - name: Build
    steps:
      - step:
          name: Checkout Source Code
          type: git-checkout
          repo: self
          # Branch name to check out.  Defaults to the default branch configured in the repo.
          # branch: main

      - step:
          name: Build and Test
          image: maven:3.8.6-jdk-11
          commands:
            - echo "Starting Maven build and test..."
            - mvn clean install -DskipTests=false #Include tests
            - echo "Maven build and test completed."
          artifacts:
            - target/*.jar  # Adjust pattern as needed for your project.
    
  - name: Code Analysis
    steps:
      - step:
          name: SonarQube Analysis
          image: maven:3.8.6-jdk-11
          script:
            - echo "Starting SonarQube analysis..."
            - mvn sonar:sonar -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN  # Use variables for sensitive data
            - echo "SonarQube analysis completed."
          when: success
          
  - name: Package and Publish
    steps:
      - step:
          name: Package Artifact
          image: maven:3.8.6-jdk-11
          commands:
            - echo "Packaging application..."
            - mkdir -p dist
            - cp target/*.jar dist/app.jar  # Customize artifact name and path.
            - echo "Application packaged."
          artifacts:
            - dist/*
    
      - step:
          name: Publish to Repository (Example: Docker)
          image: docker:latest
          script:
            - echo "Publishing Docker image (example)..."
            - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            - docker build -t $DOCKER_IMAGE_NAME:latest .  # Requires a Dockerfile
            - docker push $DOCKER_IMAGE_NAME:latest
            - echo "Docker image published."
          when: success
          variables:
            DOCKER_IMAGE_NAME: your-docker-repo/your-image-name #Replace
          services:
            - docker  # Enable Docker-in-Docker, if needed.
          after_script:
            - docker logout #Best practice to logout

options:
  docker: true
```