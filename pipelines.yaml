```yaml
# tech_stack_detector.py
stages:
  - stage: Build
    jobs:
      - job: MavenBuild
        displayName: 'Maven Build and Test'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Maven@3
            displayName: 'Maven Build'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean install'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              codeCoverageToolOption: 'Cobertura'
              codeCoverageCoberturaReportDirectory: '$(System.DefaultWorkingDirectory)/target/site/cobertura'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              mavenVersionOption: 'Default'

  - stage: SonarQubeAnalysis
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: Analyze
        displayName: 'SonarQube Analysis'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: SonarQubePrepare@5
            displayName: 'Prepare SonarQube analysis'
            inputs:
              SonarQube: 'your_sonarqube_service_connection'  # Replace with your SonarQube service connection name
              scannerMode: 'Maven'
              projectKey: 'your_project_key'             # Replace with your SonarQube project key
              projectName: 'Your Project Name'          # Replace with your SonarQube project name

          - task: Maven@3
            displayName: 'Run SonarQube analysis'
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean install sonar:sonar'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.8'
              mavenVersionOption: 'Default'

          - task: SonarQubePublish@5
            displayName: 'Publish Quality Gate Result'
            inputs:
              pollingTimeoutSec: '300'

  - stage: Publish
    dependsOn: SonarQubeAnalysis
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))  # Only publish from the main branch
    jobs:
      - job: PublishArtifacts
        displayName: 'Publish Artifacts'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: CopyFiles@2
            displayName: 'Copy JAR file'
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)/target'
              Contents: '*.jar'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

variables:
  - name: maven.options
    value: '-DskipTests'  # Example variable. Can be removed if not needed.

```