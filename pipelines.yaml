```yaml
# tech_stack_detector.py
# Pipeline for building and deploying a Java application using Maven.
# Follows industry best practices for Java/Maven projects.
# Includes stages for linting, unit testing, building, artifact storage, and deployment.

stages:
  - Lint
  - Test
  - Build
  - Package
  - Deploy

variables:
  MAVEN_IMAGE: maven:3.8.6-jdk-11
  MAVEN_CLI_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
  PROJECT_NAME: my-java-app # Replace with your project name

cache:
  paths:
    - .m2/repository
    - target/

lint:
  image: ${MAVEN_IMAGE}
  stage: Lint
  script:
    - echo "Running code linting..."
    - mvn spotless:check
  tags:
    - docker

test:
  image: ${MAVEN_IMAGE}
  stage: Test
  script:
    - echo "Running unit tests..."
    - mvn ${MAVEN_CLI_OPTS} test
  tags:
    - docker
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    reports:
      junit: target/surefire-reports/TEST-*.xml

build:
  image: ${MAVEN_IMAGE}
  stage: Build
  script:
    - echo "Building the application..."
    - mvn ${MAVEN_CLI_OPTS} compile
  tags:
    - docker
  artifacts:
    paths:
      - target/*.jar

package:
  image: ${MAVEN_IMAGE}
  stage: Package
  script:
    - echo "Packaging the application..."
    - mvn ${MAVEN_CLI_OPTS} package -DskipTests
  tags:
    - docker
  artifacts:
    paths:
      - target/*.jar # Store the JAR file as an artifact

deploy:
  image: alpine/k8s:1.26.3
  stage: Deploy
  variables:
    KUBE_NAMESPACE: default # Replace with your Kubernetes namespace
    DEPLOYMENT_FILE: deployment.yaml # Replace with your deployment file
    SERVICE_FILE: service.yaml # Replace with your service file
  script:
    - echo "Deploying to Kubernetes..."
    - apk add --no-cache curl
    - kubectl apply -n ${KUBE_NAMESPACE} -f ${DEPLOYMENT_FILE}
    - kubectl apply -n ${KUBE_NAMESPACE} -f ${SERVICE_FILE}
    - echo "Deployment complete!"
  environment:
    name: production
    url: http://your-application-url.com # Replace with your application URL
  tags:
    - docker
  only:
    - main # Only deploy from the main branch (or your chosen production branch)
```