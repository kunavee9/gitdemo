```yaml
# tech_stack_detector.py
# Pipeline for building, testing, and deploying a Java application using Maven.
# Includes stages for code checkout, dependency resolution, compilation, testing,
# artifact creation, and deployment to a staging environment.

stages:
  - checkout
  - build
  - test
  - package
  - deploy

checkout:
  stage: checkout
  image: alpine/git:latest
  script:
    - echo "Checking out code..."
    - git clone --depth 1 $CI_REPOSITORY_URL .
    - echo "Code checkout complete."

build:
  stage: build
  image: maven:3.8.6-jdk-11
  script:
    - echo "Building the application..."
    - mvn clean compile
    - echo "Build complete."

test:
  stage: test
  image: maven:3.8.6-jdk-11
  script:
    - echo "Running tests..."
    - mvn test
    - echo "Tests complete."
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    reports:
      junit: target/surefire-reports/TEST-*.xml

package:
  stage: package
  image: maven:3.8.6-jdk-11
  script:
    - echo "Packaging the application..."
    - mvn package -DskipTests
    - echo "Packaging complete."
  artifacts:
    paths:
      - target/*.jar

deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo "Deploying to staging..."
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
    - echo "Deployment to staging complete."
  only:
    - main

```