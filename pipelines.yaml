```yaml
# tech_stack_detector.py
name: React App CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Use a supported Node.js version

      - name: Install dependencies
        run: npm install # Or yarn install if using Yarn

      - name: Run linters
        run: |
          npm run lint # Or yarn lint

      - name: Run tests
        run: npm run test -- --coverage # Or yarn test.  Include coverage.

      - name: Build production assets
        run: npm run build # Or yarn build

      - name: Analyze code quality (SonarCloud)
        uses: sonarsource/sonarcloud-github-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to trigger analysis
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Insert your SonarCloud token
        with:
          args: >
            -Dsonar.organization=your-sonarcloud-org # Replace with your SonarCloud organization key
            -Dsonar.projectKey=your-sonarcloud-project # Replace with your SonarCloud project key

  deploy:
    needs: build  # Ensure build job completes successfully first
    runs-on: ubuntu-latest
    environment:
      name: Production  # Define environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your AWS region

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install awscli -y

      - name: Deploy to S3 bucket
        run: |
          aws s3 sync ./build s3://your-s3-bucket --delete # Replace with your S3 bucket name
          aws cloudfront create-invalidation --distribution-id your-cloudfront-distribution-id --paths "/*"  # Optional: invalidate CloudFront cache. Replace with your CloudFront distribution ID.
```