```yaml
# tech_stack_detector.py
# CI/CD pipeline for a React application.
# Uses Node.js for building and testing, and deploys to a cloud environment (example: AWS S3).

name: React CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x' # Use a specific Node.js version

      - name: Install dependencies
        run: npm ci # Use npm ci for clean installs

      - name: Run linters
        run: |
          npm run lint
          npm run format:check

      - name: Run tests
        run: npm test -- --coverage

      - name: Build application
        run: npm run build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: unittests
          name: codecov-react
          fail_ci_if_error: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build # Upload the 'build' directory

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: Production  # Define the environment

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Replace with your AWS region

      - name: Deploy to S3
        run: |
          aws s3 sync build s3://your-s3-bucket --delete # Replace with your S3 bucket

      - name: Invalidate CloudFront cache (Optional)
        run: |
          aws cloudfront create-invalidation --distribution-id your-cloudfront-distribution-id --paths "/*" # Replace with your CloudFront distribution ID

```