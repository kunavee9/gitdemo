```yaml
# tech_stack_detector.py
name: React CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use a supported Node.js version

      - name: Install dependencies
        run: npm install # Or yarn install, depending on your project
        
  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies (linting dependencies)
        run: npm install

      - name: Run ESLint
        run: npm run lint # Or yarn lint.  Ensure this script is defined in package.json
  
  format:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies (formatting dependencies)
        run: npm install

      - name: Run Prettier
        run: npm run format # Or yarn format. Ensure this script is defined in package.json
        
  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install # Or yarn install

      - name: Run tests
        run: npm test # Or yarn test.  Ensure this script is defined in package.json

  build:
    needs: [lint, format, test] # Ensure linting, formatting, and tests pass before building
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install # Or yarn install

      - name: Build the application
        run: npm run build # Or yarn build. Ensure this script is defined in package.json

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build #  Adjust this to your build output directory.
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Deploy to a hosting environment (Example: Netlify)
        if: github.ref == 'refs/heads/main' # Only deploy from main branch.
        run: |
          echo "Deploying to Netlify..."
          # Replace with your deployment script.
          # Example using Netlify CLI:
          # npm install -g netlify-cli
          # netlify deploy --prod --dir=build --auth-token=${{ secrets.NETLIFY_AUTH_TOKEN }} --site=${{ secrets.NETLIFY_SITE_ID }}
          echo "Deployment steps go here."
```