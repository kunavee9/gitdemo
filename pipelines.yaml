```yaml
# tech_stack_detector.py
name: React CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build
        env:
          CI: false # Bypass CI checks that might cause build failures, especially with warnings

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: ${{ steps.deploy-to-server.outputs.webapp-url }}

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3 bucket
        run: |
          aws s3 sync ./ build/ s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Deploy to Server (Example - Replace with your server deployment)
        id: deploy-to-server
        run: |
          echo "Deploying to server..."
          # Replace with your actual deployment script (e.g., SSH, SCP, etc.)
          # Example:
          # ssh -i ${{ secrets.SSH_PRIVATE_KEY }} user@your-server "mkdir -p /var/www/html/react-app && scp -r build/* user@your-server:/var/www/html/react-app"
          echo "::set-output name=webapp-url::https://your-website.com"
```