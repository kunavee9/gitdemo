```yaml
# tech_stack_detector.py
name: React CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Or your preferred Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build production bundle
        run: npm run build

      - name: Upload artifact to storage
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: react-build
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: ${{ steps.deploy-to-server.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: react-build
          path: build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3 bucket
        run: |
          aws s3 sync build s3://your-s3-bucket-name --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id your-cloudfront-distribution-id --paths "/*"

      - name: Deploy to server
        id: deploy-to-server
        run: |
          echo "Deploying to server..."
          echo "webapp-url=https://example.com" >> $GITHUB_OUTPUT
```