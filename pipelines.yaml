```yaml
# tech_stack_detector.py
# CI/CD pipeline for a React application

name: React App CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Or your preferred Node.js version

      - name: Install dependencies
        run: npm install  # Or yarn install if you use Yarn

      - name: Run linters and formatters
        run: |
          npm run lint
          npm run format

      - name: Run tests
        run: npm test -- --coverage # Add coverage flag

      - name: Build production build
        run: npm run build

      - name: Upload coverage reports to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Optional Codecov token.

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: production-build
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' # Deploy only from main branch

    steps:
      - name: Download production build
        uses: actions/download-artifact@v3
        with:
          name: production-build
          path: build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Replace with your AWS region

      - name: Deploy to S3 bucket
        run: aws s3 sync build s3://${{ secrets.AWS_S3_BUCKET }} --delete

      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
```