```yaml
# tech_stack_detector.py
# Pipeline for building, testing, and deploying a Java application using Maven.
# Includes stages for code checkout, build, unit tests, static analysis, and deployment.

stages:
  - Checkout
  - Build
  - Unit Tests
  - Static Analysis
  - Deploy

variables:
  MAVEN_IMAGE: maven:3.8.6-jdk-11

Checkout:
  stage: Checkout
  image: alpine/git:latest
  script:
    - echo "Checking out the code..."
    - git clone $CI_REPOSITORY_URL .
  artifacts:
    paths:
      - .

Build:
  stage: Build
  image: $MAVEN_IMAGE
  script:
    - echo "Building the application with Maven..."
    - mvn clean install -DskipTests
  artifacts:
    paths:
      - target/*.jar

Unit Tests:
  stage: Unit Tests
  image: $MAVEN_IMAGE
  script:
    - echo "Running unit tests with Maven..."
    - mvn test
  dependencies:
    - Build
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    reports:
      junit: target/surefire-reports/TEST-*.xml

Static Analysis:
  stage: Static Analysis
  image: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required for accurate branch analysis
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - echo "Running static analysis with SonarQube Scanner..."
    - sonar-scanner -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.sources=. -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN
  allow_failure: true
  dependencies:
    - Build

Deploy:
  stage: Deploy
  image: docker:latest
  variables:
    DOCKER_TLS_CERTDIR: "" #Disable TLS
  before_script:
    - echo "Logging into Docker Hub..."
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
  script:
    - echo "Building and pushing Docker image..."
    - docker build -t $DOCKER_IMAGE_NAME .
    - docker push $DOCKER_IMAGE_NAME
  dependencies:
    - Build
  only:
    - main # or your main branch name
```