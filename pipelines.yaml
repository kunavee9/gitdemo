```yaml
# tech_stack_detector.py
# Pipeline configuration for a Java (Maven) project.
# Includes stages for build, test, and deployment.

stages:
  - Build
  - Test
  - Deploy

variables:
  MAVEN_IMAGE: maven:3.8.6-jdk-11 # Use a specific Maven image for consistency.
  MAVEN_CLI_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn" #Optimized maven config


cache:
  paths:
    - .m2/repository
    - target/

build:
  stage: Build
  image: $MAVEN_IMAGE
  script:
    - echo "Building the Maven project..."
    - mvn $MAVEN_CLI_OPTS clean install -DskipTests  # Clean install to ensure a fresh build, skip tests for build stage.
  artifacts:
    paths:
      - target/*.jar # Assuming the build produces a JAR file.  Adjust as needed.

test:
  stage: Test
  image: $MAVEN_IMAGE
  script:
    - echo "Running unit tests..."
    - mvn $MAVEN_CLI_OPTS test # Execute unit tests.
  dependencies:
    - build # Depends on the 'build' stage to have the compiled code.
  coverage: '/(TOTAL|LINE):.*\%[^)]*\(([^%]+)\%\)/' # Simple regex for coverage parsing from console


deploy:
  stage: Deploy
  image: alpine/git # Use a lightweight image for deployment.
  before_script:
    - apk add --no-cache openssh-client  # Install ssh client
    - mkdir -p ~/.ssh
    - echo "$DEPLOY_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa # Add deploy key, sanitizing carriage returns
    - chmod 400 ~/.ssh/id_rsa
    - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts # Add host to known hosts
    - chmod 400 ~/.ssh/known_hosts
  script:
    - echo "Deploying the application..."
    - scp target/*.jar $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH # Secure copy to deployment server
    - ssh $DEPLOY_USER@$DEPLOY_HOST "chmod +x $DEPLOY_PATH/*.jar &&  nohup java -jar $DEPLOY_PATH/*.jar &"  # Make executable and run in background.  Adjust command as needed.
  dependencies:
    - test # Depends on the 'test' stage to have passed.
  only:
    - main # Only deploy from the main branch.  Adjust as needed.
  environment:
    name: production
    url: $DEPLOY_URL

```