```yaml
# tech_stack_detector.py
# Pipeline for Java (Maven) projects.
# Follows industry best practices for CI/CD.

stages:
  - Validate
  - Build
  - Test
  - Analyze
  - Package
  - Deploy

variables:
  MAVEN_IMAGE: maven:3.8.6-openjdk-17
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"  # Ensure local repo is used

validate:
  stage: Validate
  image: $MAVEN_IMAGE
  script:
    - echo "Validating pom.xml"
    - mvn $MAVEN_CLI_OPTS validate

build:
  stage: Build
  image: $MAVEN_IMAGE
  script:
    - echo "Building the application..."
    - mvn $MAVEN_CLI_OPTS clean compile

test:
  stage: Test
  image: $MAVEN_IMAGE
  script:
    - echo "Running tests..."
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    reports:
      junit: target/surefire-reports/TEST-*.xml
    paths:
      - target/surefire-reports/

analyze:
  stage: Analyze
  image: $MAVEN_IMAGE
  script:
    - echo "Running static analysis..."
    - mvn $MAVEN_CLI_OPTS checkstyle:checkstyle spotbugs:check findbugs:check
  allow_failure: true  # Analysis failures shouldn't break the pipeline
  artifacts:
    paths:
      - target/checkstyle-result.xml
      - target/spotbugsXml.xml
      - target/findbugsXml.xml

package:
  stage: Package
  image: $MAVEN_IMAGE
  script:
    - echo "Packaging the application..."
    - mvn $MAVEN_CLI_OPTS package
  artifacts:
    paths:
      - target/*.jar  # Assuming JAR packaging

deploy:
  stage: Deploy
  image: alpine/git
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-keygen -q -N "" -f ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 444 ~/.ssh/known_hosts

  script:
    - echo "Deploying the application..."
    - ssh $SSH_USER@$SSH_HOST "mkdir -p $DEPLOYMENT_PATH"
    - scp -o StrictHostKeyChecking=no target/*.jar $SSH_USER@$SSH_HOST:$DEPLOYMENT_PATH
    - ssh $SSH_USER@$SSH_HOST "$DEPLOYMENT_SCRIPT"

  environment:
    name: production
    url: $DEPLOYMENT_URL

  only:
    - main  # Deploy only from the main branch
  when: manual # Manual deployment for safety. Remove to automate

```