```yaml
# tech_stack_detector.py
# Pipeline for building and testing a Java project with Maven.
# This pipeline includes stages for checkout, build, test, and optionally deploy.

stages:
  - checkout
  - build
  - test
  - deploy

checkout:
  stage: checkout
  image: alpine/git:latest
  script:
    - echo "Checking out the source code..."
    - git clone --depth 1 $CI_REPOSITORY_URL .
    - echo "Checkout complete."
  artifacts:
    paths:
      - .

build:
  stage: build
  image: maven:3.8.6-jdk-11
  script:
    - echo "Building the application with Maven..."
    - mvn clean install -DskipTests # Skip tests during the build phase
    - echo "Build complete."
  artifacts:
    paths:
      - target/*.jar # Store the built JAR file
  dependencies:
    - checkout

test:
  stage: test
  image: maven:3.8.6-jdk-11
  script:
    - echo "Running unit tests with Maven..."
    - mvn test
    - echo "Test complete."
  dependencies:
    - build

deploy:
  stage: deploy
  image: alpine/git:latest # Or any image with deployment tools
  script:
    - echo "Deploying the application..."
    - echo "Deploy command placeholder. Replace with your actual deployment command."
    # Example:
    # - ssh user@server "java -jar /path/to/your/application.jar"
    - echo "Deployment complete."
  dependencies:
    - test
  only:
    - main # Deploy only from the main branch.  Adjust as needed
  when: manual #Require manual trigger for the deploy stage

```