```yaml
# tech_stack_detector.py
# Pipeline for building, testing, and deploying a Java application using Maven.
# This pipeline assumes a standard Maven project structure.

stages:
  - name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
  - name: Test
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Run Tests with Maven
        run: mvn -B test --file pom.xml

  - name: SonarQube Analysis
    needs: Test
    if: always() # Ensure SonarQube analysis runs even if tests fail.
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones are not suitable for SonarQube analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Cache SonarQube Scanner
        uses: actions/cache@v3
        with:
          path: .sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Replace with your SonarQube token
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} # Replace with your SonarQube URL
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} --file pom.xml

  - name: Publish
    needs: [Build, Test, SonarQube Analysis]
    if: github.ref == 'refs/heads/main' && needs.SonarQube Analysis.result == 'success' # Only publish on main branch and if SonarQube passed
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Publish to Maven Central
        run: |
          mvn -B deploy --file pom.xml -Dmaven.test.skip=true
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
```