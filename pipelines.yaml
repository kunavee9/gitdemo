```yaml
# tech_stack_detector.py
name: React CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use a specific Node.js version

      - name: Install dependencies
        run: npm install # Or yarn install

      - name: Run linters
        run: npm run lint # Or yarn lint

      - name: Run tests
        run: npm run test # Or yarn test

  build_and_deploy:
    needs: setup_and_test # Only run after tests pass
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build # Or yarn build

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main' # Only deploy from main branch
        run: |
          echo "Deploying to production..."
          # Replace with your deployment script
          # Example:
          # rsync -avz ./build/ user@your-server:/path/to/your/app

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "Deploying to staging..."
          # Replace with your deployment script
          # Example:
          # rsync -avz ./build/ user@your-staging-server:/path/to/your/app
```
